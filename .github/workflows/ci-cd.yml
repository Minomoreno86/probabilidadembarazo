name: 🚀 CI/CD - Pronostico Fertilidad

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Permite ejecutar manualmente

env:
  XCODE_VERSION: '16.0'
  IOS_VERSION: '18.6'
  DEVICE: 'iPhone 16'

jobs:
  # 🧪 JOB DE TESTS Y VALIDACIÓN
  test-and-validate:
    name: 🧪 Tests & Validación
    runs-on: macos-latest
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Para code coverage completo
      
      - name: 🍎 Configurar Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: 📱 Listar simuladores disponibles
        run: |
          xcrun simctl list devices available
          echo "Simuladores iOS disponibles:"
          xcrun simctl list devices | grep "iPhone"
      
      - name: 🔧 Instalar dependencias
        run: |
          echo "Instalando dependencias..."
          # Aquí puedes agregar comandos para instalar dependencias si las hay
          echo "Dependencias instaladas ✅"
      
      - name: 🧪 Ejecutar Tests Unitarios
        run: |
          echo "🧪 Ejecutando tests unitarios..."
          xcodebuild test \
            -project "Pronostico fertilidad.xcodeproj" \
            -scheme "Pronostico fertilidad" \
            -destination "platform=iOS Simulator,name=${{ env.DEVICE }},OS=${{ env.IOS_VERSION }}" \
            -only-testing:Pronostico_fertilidadTests \
            -enableCodeCoverage YES \
            -resultBundlePath "TestResults.xcresult" \
            | xcpretty
      
      - name: 🧪 Ejecutar Tests UI
        run: |
          echo "🧪 Ejecutando tests UI..."
          xcodebuild test \
            -project "Pronostico fertilidad.xcodeproj" \
            -scheme "Pronostico fertilidad" \
            -destination "platform=iOS Simulator,name=${{ env.DEVICE }},OS=${{ env.IOS_VERSION }}" \
            -only-testing:Pronostico_fertilidadUITests \
            -enableCodeCoverage YES \
            -resultBundlePath "UITestResults.xcresult" \
            | xcpretty
      
      - name: 📊 Generar Code Coverage
        run: |
          echo "📊 Generando reporte de code coverage..."
          xcrun xccov view --report --files-for-target "Pronostico fertilidad" TestResults.xcresult
          xcrun xccov view --report --files-for-target "Pronostico fertilidad" UITestResults.xcresult
      
      - name: 📦 Subir resultados de tests
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            TestResults.xcresult
            UITestResults.xcresult
          retention-days: 30
      
      - name: 📈 Reporte de Code Coverage
        uses: romeovs/lcov-reporter-action@v0.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: coverage.info
      
      - name: 📧 Notificar resultados
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "🧪 Tests Pronostico Fertilidad - ${{ job.status }}"
          to: ${{ secrets.EMAIL_TO }}
          from: "GitHub Actions"
          body: |
            Tests ejecutados para Pronostico Fertilidad
            
            Estado: ${{ job.status }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            
            Ver detalles: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  # 🏗️ JOB DE BUILD Y ANÁLISIS
  build-and-analyze:
    name: 🏗️ Build & Análisis
    runs-on: macos-latest
    needs: test-and-validate
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
      
      - name: 🍎 Configurar Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: 🔍 Análisis estático del código
        run: |
          echo "🔍 Ejecutando análisis estático..."
          xcodebuild analyze \
            -project "Pronostico fertilidad.xcodeproj" \
            -scheme "Pronostico fertilidad" \
            -destination "platform=iOS Simulator,name=${{ env.DEVICE }},OS=${{ env.IOS_VERSION }}" \
            | xcpretty
      
      - name: 🏗️ Build de la aplicación
        run: |
          echo "🏗️ Construyendo aplicación..."
          xcodebuild build \
            -project "Pronostico fertilidad.xcodeproj" \
            -scheme "Pronostico fertilidad" \
            -destination "platform=iOS Simulator,name=${{ env.DEVICE }},OS=${{ env.IOS_VERSION }}" \
            -configuration Debug \
            | xcpretty
      
      - name: 📱 Build para simulador
        run: |
          echo "📱 Construyendo para simulador..."
          xcodebuild build \
            -project "Pronostico fertilidad.xcodeproj" \
            -scheme "Pronostico fertilidad" \
            -destination "platform=iOS Simulator,name=${{ env.DEVICE }},OS=${{ env.IOS_VERSION }}" \
            -configuration Release \
            | xcpretty

  # 🚀 JOB DE DESPLIEGUE (OPCIONAL)
  deploy:
    name: 🚀 Despliegue
    runs-on: macos-latest
    needs: [test-and-validate, build-and-analyze]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
      
      - name: 🍎 Configurar Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: 🏷️ Crear Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            🚀 Release automático de Pronostico Fertilidad
            
            ## Cambios incluidos:
            - Tests ejecutados exitosamente
            - Build validado
            - Análisis estático completado
            
            ## Detalles técnicos:
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            - Workflow: ${{ github.workflow }}
          draft: false
          prerelease: false
